---
description: Create agile epics
globs: 
alwaysApply: false
---
# Create agile epics

This rule guides the AI to systematically gather information and generate a comprehensive epic definition in Markdown format. An epic represents a large body of work that can be broken down into smaller user stories, features, or tasks.

Instructions for the AI (Content of the Rule):

"When activated, you should guide the user through creating an agile epic by following these steps:

Phase 1: Information Gathering
Acknowledge the request and inform the user that you need to ask some questions to create a well-structured epic. Then, ask the following questions, waiting for their input after each block:

**Epic Core Details:**
1. Epic Title/ID: "What is a concise, descriptive title for this epic? Include an ID if you have one (e.g., 'EPIC-001: Customer Self-Service Portal')."
2. Epic Owner: "Who is the epic owner or product owner responsible for this epic?"
3. Business Value: "What is the primary business value or strategic goal this epic will deliver? Why is this epic important to the organization?"
4. Target Users: "Who are the primary users or personas that will benefit from this epic? (e.g., 'customers', 'internal staff', 'administrators')"

**Epic Scope and Context:**
5. Problem Statement: "What specific problem or opportunity does this epic address? What pain points will it solve?"
6. Solution Overview: "Provide a high-level description of the proposed solution or approach."
7. Success Criteria: "How will you measure the success of this epic? What are the key metrics or outcomes you expect?"
8. Dependencies: "Are there any dependencies on other epics, systems, or external factors that could impact this epic?"

**Epic Breakdown:**
9. Estimated Scope: "What is the estimated size/effort for this epic? (e.g., 'Large - 3-6 months', 'Medium - 1-3 months', 'Small - 2-8 weeks')"
10. Key Features/Components: "What are the main features, components, or capabilities that will be included in this epic? List 3-7 high-level items."
11. User Stories (Optional): "Do you already have specific user stories identified for this epic? If so, please list their titles or IDs."

**Timeline and Planning:**
12. Target Release: "What is the target release or timeframe for completing this epic?"
13. Priority Level: "What is the priority level of this epic? (e.g., 'High', 'Medium', 'Low' or 'Must Have', 'Should Have', 'Could Have')"
14. Risks and Assumptions: "What are the key risks, assumptions, or unknowns related to this epic?"

**Documentation and Linking:**
15. Epic Filename: "What should be the filename for this epic document? (e.g., 'EPIC-001_Customer_Self_Service_Portal.md')"
16. Related Documentation: "Are there any related documents, mockups, technical specifications, or other epics that should be referenced?"

Phase 2: Epic Document Generation
Once all information is gathered, inform the user you will now generate the epic document. Then, provide the content:

**Content for Epic Markdown File: `[Epic Filename From Input]`**
```markdown
# Epic: [Epic Title/ID From Input]

**Epic Owner:** [Epic Owner From Input]  
**Priority:** [Priority Level From Input]  
**Target Release:** [Target Release From Input]  
**Estimated Scope:** [Estimated Scope From Input]

---

## Business Value & Strategic Goals

[Business Value From Input]

### Target Users
[Target Users From Input]

### Success Criteria
[Success Criteria From Input]

---

## Problem Statement

[Problem Statement From Input]

---

## Solution Overview

[Solution Overview From Input]

---

## Key Features & Components

[FOR EACH Key Feature/Component DO
- **[Feature Name]**: [Brief description]
ENDLOOP]

---

## User Stories

[IF User Stories were provided THEN
The following user stories have been identified for this epic:

[List User Stories From Input]

ELSE
_User stories for this epic will be defined and linked here as they are created._
ENDIF]

---

## Dependencies

[Dependencies From Input]

---

## Risks & Assumptions

### Risks
[List key risks from Risks and Assumptions input]

### Assumptions
[List key assumptions from Risks and Assumptions input]

---

## Acceptance Criteria

This epic will be considered complete when:
- [ ] All identified user stories are completed and accepted
- [ ] Success criteria metrics are achieved
- [ ] All dependencies are resolved
- [ ] Solution is deployed to production
- [ ] User acceptance testing is completed successfully

---

## Related Documentation

[IF Related Documentation was provided THEN
[List Related Documentation From Input as links or references]
ELSE
_Related documentation will be linked here as it becomes available._
ENDIF]

---

## Epic Progress

**Status:** Not Started  
**Completion:** 0%

### Milestones
- [ ] Epic planning and breakdown complete
- [ ] User stories defined and estimated
- [ ] Development started
- [ ] First increment delivered
- [ ] User testing completed
- [ ] Epic completed and deployed

---

**Created:** [Current Date]  
**Last Updated:** [Current Date]
```

After generating the content, provide these additional recommendations:

**Next Steps:**
1. Review and refine the epic with stakeholders
2. Break down the epic into specific user stories
3. Estimate the user stories and plan sprints
4. Create any necessary technical documentation
5. Set up tracking and monitoring for success criteria

**Tips for Epic Management:**
- Keep the epic focused on a single, cohesive business goal
- Regularly review and update the epic as new information emerges
- Ensure all user stories clearly contribute to the epic's success criteria
- Monitor progress and adjust scope if needed to meet timeline constraints
"

