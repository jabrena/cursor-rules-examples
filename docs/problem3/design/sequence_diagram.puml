@startuml God_Information_Gateway_Service
!theme plain
title God Information Gateway Service\nSequence Diagram

' Epic: EPIC-001 - God Information Gateway API
' Feature: FEAT-001 - God Information Gateway API  
' User Story: US-001 - Basic God Information Service

actor "API Consumer" as Client
participant "God Gateway API\n(localhost:8080)" as Gateway
participant "Greek Gods API\n(external)" as Greek
participant "Roman Gods API\n(external)" as Roman
participant "Nordic Gods API\n(external)" as Nordic
participant "Indian Gods API\n(external)" as Indian
participant "Celtiberian Gods API\n(external)" as Celtiberian

note over Client, Celtiberian
  **Epic:** EPIC-001 - God Information Gateway API
  **Feature:** FEAT-001 - God Information Gateway API
  **User Story:** US-001 - Basic God Information Service
end note

== Background: API is running ==
note over Gateway : God Information Gateway API\nis running on localhost:8080

== Main Success Scenario: Retrieve Greek Gods ==
note over Client, Greek : **Scenario:** Successfully retrieve Greek gods list\n**Given:** All external mythology APIs are available

Client -> Gateway : GET /api/v1/gods/GREEK
activate Gateway

note over Gateway : Validate mythology parameter\n(GREEK, ROMAN, NORDIC, INDIAN, CELTIBERIAN)

Gateway -> Greek : GET /greek
activate Greek
note over Greek : External API at\nmy-json-server.typicode.com/\njabrena/latency-problems/greek
Greek --> Gateway : Response: ["Zeus", "Hera", "Poseidon", ...]
deactivate Greek

note over Gateway : Process and format response\nwith metadata (count, source, timestamp)

Gateway --> Client : HTTP 200 OK\n{\n  "mythology": "GREEK",\n  "gods": ["Zeus", "Hera", "Poseidon", ...],\n  "count": 20,\n  "source": "external_api",\n  "timestamp": "2024-01-15T10:30:00Z"\n}
deactivate Gateway

note over Client : **Acceptance Criteria Met:**\n✓ HTTP 200 status received\n✓ Response contains Greek gods including\n  "Zeus", "Hera", "Poseidon"

== Alternative Flows: Other Mythologies ==

Client -> Gateway : GET /api/v1/gods/ROMAN
activate Gateway
Gateway -> Roman : GET /roman
activate Roman
Roman --> Gateway : ["Venus", "Mars", "Neptun", ...]
deactivate Roman
Gateway --> Client : HTTP 200 OK with Roman gods
deactivate Gateway

Client -> Gateway : GET /api/v1/gods/NORDIC
activate Gateway
Gateway -> Nordic : GET /nordic
activate Nordic
Nordic --> Gateway : ["Baldur", "Freyja", "Heimdall", ...]
deactivate Nordic
Gateway --> Client : HTTP 200 OK with Nordic gods
deactivate Gateway

Client -> Gateway : GET /api/v1/gods/INDIAN
activate Gateway
Gateway -> Indian : GET /indian
activate Indian
Indian --> Gateway : ["Brahma", "Vishnu", "Shiva", ...]
deactivate Indian
Gateway --> Client : HTTP 200 OK with Indian gods
deactivate Gateway

Client -> Gateway : GET /api/v1/gods/CELTIBERIAN
activate Gateway
Gateway -> Celtiberian : GET /celtiberian
activate Celtiberian
Celtiberian --> Gateway : ["Ataecina", "Candamius", ...]
deactivate Celtiberian
Gateway --> Client : HTTP 200 OK with Celtiberian gods
deactivate Gateway

== Error Scenarios ==

' Invalid mythology parameter
Client -> Gateway : GET /api/v1/gods/INVALID
activate Gateway
note over Gateway : Invalid mythology parameter
Gateway --> Client : HTTP 400 Bad Request\n{"error": "INVALID_MYTHOLOGY"}
deactivate Gateway

' Timeout scenario
Client -> Gateway : GET /api/v1/gods/GREEK
activate Gateway
Gateway -> Greek : GET /greek
activate Greek
note over Greek : Timeout after 10 seconds
Gateway <-x Greek : Timeout
deactivate Greek
Gateway --> Client : HTTP 504 Gateway Timeout\n{"error": "GATEWAY_TIMEOUT"}
deactivate Gateway

' Service unavailable scenario
Client -> Gateway : GET /api/v1/gods/GREEK
activate Gateway
Gateway -> Greek : GET /greek
activate Greek
note over Greek : Service unavailable
Gateway <-x Greek : Service unavailable
deactivate Greek
Gateway --> Client : HTTP 503 Service Unavailable\n{"error": "SERVICE_UNAVAILABLE"}
deactivate Gateway

note over Client, Celtiberian
  **Key Implementation Details:**
  • Gateway aggregates from 5 external APIs
  • 10-second timeout for all external connections
  • External APIs: https://my-json-server.typicode.com/jabrena/latency-problems/
  • Spring Boot microservice architecture
  • Thread-safe concurrent access support
end note

@enduml 