<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>info.jab.demo</groupId>
  <artifactId>maven-demo</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>maven-demo</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <java.version>24</java.version>
    <maven.version>3.9.9</maven.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Dependencies -->
    <jackson.version>2.16.0</jackson.version>
    <wiremock.version>3.13.0</wiremock.version>
    <slf4j.version>2.0.13</slf4j.version>
    <logback.version>1.5.6</logback.version>
    <mockito.version>5.12.0</mockito.version>

    <!-- Test dependencies -->
    <junit.bom.version>5.11.0</junit.bom.version>
    <assertj.version>3.26.3</assertj.version>

    <!-- Maven Plugins -->
    <maven-plugins-flatten.version>1.7.0</maven-plugins-flatten.version>
    <maven-plugins-enforcer.version>3.5.0</maven-plugins-enforcer.version>
    <maven-plugins-compiler.version>3.14.0</maven-plugins-compiler.version>
    <error-prone.version>2.38.0</error-prone.version>
    <nullaway.version>0.11.0</nullaway.version>
    <maven-plugins-surefire.version>3.5.3</maven-plugins-surefire.version>
    <maven-plugins-failsafe.version>3.5.3</maven-plugins-failsafe.version>
    <maven-plugins-jxr.version>3.6.0</maven-plugins-jxr.version>
    <maven-plugins-jacoco.version>0.8.13</maven-plugins-jacoco.version>
    <maven-plugins-versions.version>2.18.0</maven-plugins-versions.version>
    <maven-plugins-git-commit-id.version>4.9.10</maven-plugins-git-commit-id.version>

    <!-- Coverage -->
    <coverage.level>80</coverage.level>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Optionally: parameterized tests support -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- AssertJ for fluent assertions -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Mockito for mocking dependencies -->
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
    </dependency>

    <!-- WireMock for stubbing external services -->
    <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock-standalone</artifactId>
        <version>${wiremock.version}</version>
        <scope>test</scope>
    </dependency>

    <!-- Jackson for JSON processing -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Logging -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version> <!-- Use a recent version -->
    </dependency>
    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version> <!-- Use a recent version -->
        <scope>runtime</scope> <!-- Or test, if only for tests. Runtime is fine for general use -->
    </dependency>

    <!-- JSpecify for @Nullable annotations -->
    <dependency>
        <groupId>org.jspecify</groupId>
        <artifactId>jspecify</artifactId>
        <version>1.0.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${maven-plugins-flatten.version}</version>
        <configuration>
        </configuration>
        <executions>
            <execution>
                <id>flatten</id>
                <phase>process-resources</phase>
                <goals>
                    <goal>flatten</goal>
                </goals>
            </execution>
            <execution>
                <id>flatten.clean</id>
                <phase>clean</phase>
                <goals>
                    <goal>clean</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-plugins-enforcer.version}</version>
        <executions>
            <execution>
                <id>enforce</id>
                <configuration>
                    <rules>
                        <dependencyConvergence />
                        <banDuplicatePomDependencyVersions />
                        <requireMavenVersion>
                            <version>${maven.version}</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <version>${java.version}</version>
                        </requireJavaVersion>
                        <bannedDependencies>
                            <excludes>
                                <exclude>org.projectlombok:lombok</exclude>
                            </excludes>
                        </bannedDependencies>
                    </rules>
                    <fail>true</fail>
                </configuration>
                <goals>
                    <goal>enforce</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-plugins-compiler.version}</version>
        <configuration>
            <release>${java.version}</release>
            <compilerArgs>
                <arg>-Xlint:all</arg>
                <arg>-Werror</arg>
                <!-- Error prone settings-->
                <arg>-XDcompilePolicy=simple</arg>
                <arg>--should-stop=ifError=FLOW</arg>
                <arg>-Xplugin:ErrorProne \
                    -Xep:NullAway:ERROR \
                    -XepOpt:NullAway:JSpecifyMode=true \
                    -XepOpt:NullAway:TreatGeneratedAsUnannotated=true \
                    -XepOpt:NullAway:CheckOptionalEmptiness=true \
                    -XepOpt:NullAway:HandleTestAssertionLibraries=true \
                    -XepOpt:NullAway:AssertsEnabled=true \
                    -XepOpt:NullAway:AnnotatedPackages=info.jab.latency
                </arg>
                <arg>--enable-preview</arg>
            </compilerArgs>
            <annotationProcessorPaths>
                <path>
                    <groupId>com.google.errorprone</groupId>
                    <artifactId>error_prone_core</artifactId>
                    <version>${error-prone.version}</version>
                </path>
                <path>
                    <groupId>com.uber.nullaway</groupId>
                    <artifactId>nullaway</artifactId>
                    <version>${nullaway.version}</version>
                </path>
            </annotationProcessorPaths>
        </configuration>
        <!-- Avoid issues in tests if you verify a class using a preview feature-->
        <executions>
            <execution>
                <id>default-testCompile</id>
                <phase>test-compile</phase>
                <goals>
                    <goal>testCompile</goal>
                </goals>
                <configuration>
                    <compilerArgs>
                        <arg>--enable-preview</arg>
                        <arg>-Xlint:all</arg>
                        <arg>-Werror</arg>
                        <arg>-Xlint:-preview</arg>
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>--should-stop=ifError=FLOW</arg>
                        <arg>-Xplugin:ErrorProne \
                            -Xep:NullAway:ERROR \
                            -XepOpt:NullAway:JSpecifyMode=true \
                            -XepOpt:NullAway:TreatGeneratedAsUnannotated=true \
                            -XepOpt:NullAway:CheckOptionalEmptiness=true \
                            -XepOpt:NullAway:HandleTestAssertionLibraries=true \
                            -XepOpt:NullAway:AssertsEnabled=true \
                            -XepOpt:NullAway:AnnotatedPackages=info.jab.latency
                        </arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${error-prone.version}</version>
                        </path>
                        <path>
                            <groupId>com.uber.nullaway</groupId>
                            <artifactId>nullaway</artifactId>
                            <version>${nullaway.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-plugins-surefire.version}</version>
        <configuration>
            <argLine>--enable-preview</argLine>
            <skipAfterFailureCount>1</skipAfterFailureCount>
            <includes>
                <include>**/*Test.java</include>
            </includes>
            <excludes>
                <exclude>**/*IT.java</exclude>
            </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-plugins-failsafe.version}</version>
        <configuration>
            <argLine>--enable-preview</argLine>
            <includes>
                <include>**/*IT.java</include>
            </includes>
            <excludes>
                <exclude>**/*Test.java</exclude>
            </excludes>
        </configuration>
        <executions>
            <execution>
                <goals>
                    <goal>integration-test</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${maven-plugins-versions.version}</version>
        <configuration>
            <allowSnapshots>false</allowSnapshots>
        </configuration>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>${maven-plugins-git-commit-id.version}</version>
        <executions>
            <execution>
                <id>get-the-git-infos</id>
                <goals>
                    <goal>revision</goal>
                </goals>
                <phase>initialize</phase>
            </execution>
        </executions>
        <configuration>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
            <commitIdGenerationMode>full</commitIdGenerationMode>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
        <id>jacoco</id>
        <activation>
            <activeByDefault>false</activeByDefault>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven-plugins-jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${coverage.level}%</minimum>
                                            </limit>
                                            <limit>
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${coverage.level}%</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
        <!-- Generates HTML test reports -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>${maven-plugins-surefire.version}</version>
            <configuration>
                <outputName>junit-report</outputName>
                <showSuccess>true</showSuccess>
            </configuration>
        </plugin>

        <!-- Adds links to source code in reports -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>${maven-plugins-jxr.version}</version>
        </plugin>
    </plugins>
  </reporting>
</project>
